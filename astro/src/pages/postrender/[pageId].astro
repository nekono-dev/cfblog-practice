---
// アクセスされたPageを都度作成
export const prerender = false;
import { PagesApi } from '@/client';
import { config } from '@/lib/apiClientConfig';
import Metadatas from '@/components/Metadatas.astro';

const { pageId } = Astro.params;
if (typeof pageId === 'undefined') {
  return new Response(null, {
    status: 503,
    statusText: 'Server Error',
  });
}
const pagesApi = new PagesApi(config);
const getPageResult = await pagesApi.pagesPagePageIdGet({
  pageId,
});

if ('error' in getPageResult) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found',
  });
}

// ImageIDが存在する場合、ロード時にimgUrlを作成
const imgId = getPageResult.imgId;
let imgUrl: undefined | URL;
if (imgId) {
  const bucketUrl = import.meta.env.PUBLIC_BUCKET_BASE_URL as string;
  imgUrl = new URL(imgId, bucketUrl);
}

const pageUrl = Astro.url.pathname;
const pageTitle = 'cfblog-practice';
const ogpImgUrl = 'ogpImage.png';
const robots = ['index', 'follow', 'noarchive', 'noimageindex'];
---

<html lang="ja">
  <head prefix="og: https://ogp.me/ns#">
    <Metadatas
      pageTitle={pageTitle}
      subPath={pageUrl}
      ogpImgUrl={ogpImgUrl}
      robots={robots}
    />
  </head>
  <body>
    <h1>Postrenderd page</h1>
    {JSON.stringify(getPageResult)}
    {imgUrl && <img src={imgUrl.href} />}
  </body>
</html>
